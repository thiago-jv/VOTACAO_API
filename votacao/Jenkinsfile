pipeline {
    agent any
    environment {
        MVN_HOME = '/usr/share/maven'
        SONAR_QUBE_URL = 'http://localhost:9000'
        SONAR_QUBE_TOKEN = '15b62d87de7671cbe35d0d17d6653bd86207b8ae'
    }
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', credentialsId: 'GIT', url: 'https://github.com/thiago-jv/VOTACAO_API.git'
            }
        }
        stage('Build') {
            steps {
                dir('votacao') {
                    sh 'mvn clean package'
                }
            }
        }
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SONNAR_LOCAL') {
                    sh "${tool 'SONAR_SCANNER'}/bin/sonar-scanner -Dsonar.projectKey=DeployBackEnd -Dsonar.host.url=${env.SONAR_QUBE_URL} -Dsonar.login=${env.SONAR_QUBE_TOKEN} -Dsonar.java.binaries=./"
                }
            }
        }
        stage('Quality Gate') {
            steps {
                sleep(10)
                timeout(time: 1, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
        stage('Deploy') {
            steps {
              sh 'docker compose build'
              sh 'docker compose up -d'
            }
        }

    }
}